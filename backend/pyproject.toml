[tool.poetry]
name = "booking-htmx"
version = "0.1.0"
description = ""
authors = ["Paul Sheridan <paul.sheridan@me.com>"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.10"
fastapi = "^0.110.1"
uvicorn = { extras = ["standard"], version = "^0.29.0" }
pydantic-settings = "^2.2.1"
tenacity = "^8.2.3"
pydantic-extra-types = "^2.6.0"
passlib = "^1.7.4"
alembic = "^1.13.1"
python-jose = "^3.3.0"
python-multipart = "^0.0.9"
sqlalchemy = "^2.0.29"
emails = "^0.6"
jinja2 = "^3.1.3"
mypy = "^1.9.0"
psycopg = { extras = ["binary"], version = "^3.1.18" }
httpx = "^0.27.0"
pydantic = { extras = ["email"], version = "^2.7.0" }
sqlmodel = "^0.0.16"
bcrypt = "^4.1.2"
coverage = "^7.5.1"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
mypy = "^1.8.0"
ruff = "^0.2.2"
pre-commit = "^3.6.2"
types-python-jose = "^3.3.4.20240106"
types-passlib = "^1.7.7.20240106"
coverage = "^7.4.4"
freezegun = "*"
pytest-cov = "*"

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
line_length = 88

[tool.mypy]
strict = true
exclude = ["venv", "alembic"]

[tool.ruff]
target-version = "py312"
exclude = ["alembic"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "W191", # indentation contains tabs
    "B904", # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
